direction down
title Coink API - Endpoints & Routes

// Authentication Endpoints
AuthAPI [icon: key, label: "Authentication API"] {
  PostLogin [icon: login, label: "POST /auth/login"]
}

// User Management Endpoints  
UserAPI [icon: user, label: "User Management API"] {
  PostUser [icon: user-plus, label: "POST /users"]
  GetUsers [icon: users, label: "GET /users"]
  GetUser [icon: user, label: "GET /users/:id"]
  PatchUser [icon: edit, label: "PATCH /users/:id"]
  DeleteUser [icon: trash, label: "DELETE /users/:id"]
  PatchPassword [icon: lock, label: "PATCH /users/:id/password"]
}

// Category Management Endpoints
CategoryAPI [icon: tag, label: "Category API"] {
  PostCategory [icon: plus, label: "POST /categories"]
  GetCategories [icon: list, label: "GET /categories"]
  GetCategory [icon: tag, label: "GET /categories/:id"]
  PatchCategory [icon: edit, label: "PATCH /categories/:id"]
  DeleteCategory [icon: trash, label: "DELETE /categories/:id"]
  PostDefaults [icon: settings, label: "POST /categories/setup-defaults"]
}

// Transaction Management Endpoints
TransactionAPI [icon: dollar, label: "Transaction API"] {
  PostTransaction [icon: plus, label: "POST /transactions"]
  PostInstallments [icon: credit-card, label: "POST /transactions/installments"]
  GetTransactions [icon: list, label: "GET /transactions"]
  GetTransaction [icon: dollar, label: "GET /transactions/:id"]
  PatchTransaction [icon: edit, label: "PATCH /transactions/:id"]
  DeleteTransaction [icon: trash, label: "DELETE /transactions/:id"]
  
  // Installment specific endpoints
  GetInstallmentGroup [icon: group, label: "GET /transactions/installments/:groupId"]
  DeleteInstallmentGroup [icon: trash, label: "DELETE /transactions/installments/:groupId"]
  PatchPaymentStatus [icon: check, label: "PATCH /transactions/:id/payment-status"]
  
  // Reporting endpoints
  GetMonthlySummary [icon: chart, label: "GET /transactions/summary/:year/:month"]
}

// Query Parameters & Filters
Filters [icon: filter, label: "Query Filters"] {
  TransactionFilters [label: "Transaction Filters"] {
    Type [label: "?type=INCOME|EXPENSE"]
    PaymentMethod [label: "?paymentMethod=PIX|CREDIT_CARD|..."]
    Category [label: "?categoryId=uuid"]
    DateRange [label: "?startDate=date&endDate=date"]
    Paid [label: "?isPaid=true|false"]
    Recurring [label: "?isRecurring=true|false"]
    Installment [label: "?isInstallment=true|false"]
    Pagination [label: "?page=1&limit=20"]
  }
  
  CategoryFilters [label: "Category Filters"] {
    Type [label: "?type=INCOME|EXPENSE"]
  }
}

// Authentication Requirements
AuthRequired [icon: shield, label: "Authentication Required"] {
  JWT [label: "Bearer Token Required"]
  UserContext [label: "User context from token"]
  DataIsolation [label: "User data isolation"]
}

// Request/Response Examples
RequestExamples [icon: code, label: "Request Examples"] {
  CreateTransaction [label: "Create Transaction"] {
    Body [label: "{\n  description: 'Coffee',\n  amount: 5.50,\n  type: 'EXPENSE',\n  paymentMethod: 'PIX',\n  categoryId: 'uuid'\n}"]
  }
  
  CreateInstallment [label: "Create Installment"] {
    Body [label: "{\n  description: 'iPhone',\n  amount: 3600.00,\n  type: 'EXPENSE',\n  paymentMethod: 'CREDIT_CARD',\n  categoryId: 'uuid',\n  isInstallment: true,\n  totalInstallments: 12,\n  interestRate: 2.5\n}"]
  }
}

ResponseExamples [icon: json, label: "Response Examples"] {
  TransactionResponse [label: "Transaction Response"] {
    Data [label: "{\n  id: 'uuid',\n  description: 'Coffee',\n  amount: 5.50,\n  category: {\n    name: 'Food',\n    color: '#FF5722'\n  },\n  createdAt: '2024-01-15T10:30:00Z'\n}"]
  }
  
  InstallmentResponse [label: "Installment Response"] {
    Data [label: "{\n  installmentGroupId: 'uuid',\n  transactions: [...],\n  totalAmount: 3600.00,\n  totalInstallments: 12,\n  installmentAmount: 300.00\n}"]
  }
}

// Error Handling
ErrorHandling [icon: warning, label: "Error Handling"] {
  ValidationErrors [label: "400 - Validation Errors"]
  AuthErrors [label: "401 - Unauthorized"]
  NotFound [label: "404 - Resource Not Found"]
  Conflict [label: "409 - Conflict (duplicates)"]
  ServerError [label: "500 - Internal Server Error"]
}

// Connections
AuthRequired > CategoryAPI: Protected routes
AuthRequired > TransactionAPI: Protected routes
AuthRequired > UserAPI: Protected routes (except POST /users)

Filters > TransactionAPI: Query filtering
RequestExamples > TransactionAPI: Request format
TransactionAPI > ResponseExamples: Response format
TransactionAPI > ErrorHandling: Error responses